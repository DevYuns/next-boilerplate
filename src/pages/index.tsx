import {Suspense, useEffect} from 'react';
import {usePreloadedQuery, useQueryLoader} from 'react-relay';

import Head from 'next/head';
import type {PostsQuery} from '@/__generated__/PostsQuery.graphql';
import type {PreloadedQuery} from 'react-relay';
import type {ReactElement} from 'react';
import {postsQuery} from '@/relay/queries/Post';
import styled from '@emotion/styled';

const Container = styled.div`
  height: 100%;
  background-color: ${({theme}) => theme.bg.basic};

  display: flex;
  align-items: center;
  justify-content: center;
`;

const Title = styled.h1`
  font-size: 48px;
  margin-bottom: 24px;
`;

type Props = {
  queryReference: PreloadedQuery<PostsQuery>;
};

function Page({queryReference}: Props): ReactElement {
  const {posts} = usePreloadedQuery<PostsQuery>(postsQuery, queryReference);

  return (
    <div>
      <Title>Next + relay + prisma = ❤️</Title>
      {posts ? (
        <ul>
          {posts.map((elm) => {
            if (!elm) {
              return null;
            }

            return (
              <li key={elm.id} style={{fontSize: '24px'}}>
                title : <span>{elm.title}</span>
              </li>
            );
          })}
        </ul>
      ) : (
        <h1>No data</h1>
      )}
    </div>
  );
}

export default function PageRoot(): ReactElement {
  const [queryReference, loadQuery, disposeQuery] =
    useQueryLoader<PostsQuery>(postsQuery);

  useEffect(() => {
    loadQuery({});

    return () => {
      disposeQuery();
    };
  }, [disposeQuery, loadQuery]);

  return (
    <>
      <Head>
        <title>Relay-Next-boilderplate</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Suspense fallback={<div>loading...</div>}>
          {queryReference && <Page queryReference={queryReference} />}
        </Suspense>
      </Container>
    </>
  );
}
